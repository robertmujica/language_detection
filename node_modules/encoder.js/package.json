{
  "name": "encoder.js",
  "version": "0.0.2",
  "description": "An encoding library in JavaScript",
  "main": "encoder.js",
  "scripts": {
    "test": "mocha ./test/encoder.test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/liushuping/encoder.js"
  },
  "keywords": [
    "JavaScript",
    "Encoding",
    "Encode",
    "Web",
    "HTML",
    "URL"
  ],
  "author": {
    "name": "Shuping LIU"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/liushuping/encoder.js/issues"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "encoder.js\n=======\n\nAn encoding library in JavaScript\n\n[![build status](https://travis-ci.org/liushuping/encoder.js.svg)](https://travis-ci.org/liushuping/encoder.js.svg)\n\n## HTML encode and decode\nHTML encode an input string\n```javascript\nvar encoder = require('encoder.js');\nvar input = '100 > 200 is incorrect';\nvar encoded = encoder.encodeHTML(input); //100&nbsp;&gt;&nbsp;200&nbsp;is&nbsp;incorrect\n```\n\nHTML decode an input string\n```javascript\nvar encoder = require('encoder.js');\nvar intput = '100 &gt; 200 is incorrect';\nvar decoded = encoder.decodeHTML(input); //100 > 200 is incorrect\n```\n\n## HTML attribute encode and decode\nHTML attribute encode an input string, this method only encode 4 characters: `&`, `<`, `'` and `\"`\n```javascript\nvar encoder = require('encoder.js');\nvar input = '100<200';\nvar encoded = encoder.encodeHTMLAttr(input); //100&lt;200\n\n// but '>' will be not encoded\ninput = '200>100';\nencoded = encoder.encodeHTMLAttr(input); //200>100\n```\nTo decode HTML attribute, use `encoder.decodeHTML`\n\n## JavaScript encode and decode\nCharacters `'\\r\\t\"\\n\\b\\f'` will be escaped to `'\\\\r\\\\t\\\\\"\\\\n\\\\b\\\\f'`\n```javascript\nvar input = '\\r\\t\"\\n\\b\\f';\nvar encoded = encoder.encodeJavaScript(input); //\\r\\t\\\"\\n\\b\\f\n```\nAny control character (code < 0x20) will be encoded\n```javascript\nvar input = String.fromCharCode(0) + String.fromCharCode(16) + String.fromCharCode(31);\nvar encoded = encoder.encodeJavaScript(input); //\\u0000\\u0010\\u001f\n```\nCharacters #133, #8232 and #8233 will be encoded\n```javascript\nvar input = String.fromCharCode(133) + String.fromCharCode(8232) + String.fromCharCode(8233);\nvar encoded = encoder.encodeJavaScript(input); //\\u0085\\u2028\\u2029\n```\n\n## XML encode and decode\nXML encode has the same behavior as HTML encode except XML encode converts `'` into `&apos;`\n```javascript\nvar input = '\\'';\nvar encoded = encoder.xmlEncode(input); //&apos;\n```\n\n## URI encode and decode\nURI encode an input string\n```javascript\nvar encoder = require('./encoder.js');\nvar input = 'http://www.example.com/abc 123';\nvar encoded = encoder.encodeURI(input); //http://www.example.com/abc%20123\n```\n\nURI decode an input string\n```javascript\nvar encoder = require('./encoder.js');\nvar input = 'http://www.example.com/abc%20123';\nvar decoded = encoder.decodeURI(input); //http://www.example.com/abc 123\n```\n\n## Base64 encode and decode\nBase64 encode a string\n```javascript\nvar input = 'Hello World!';\nvar encoded = encoder.base64Encode(input); //\"SGVsbG8gV29ybGQh\"\n```\nDecode a base64 string\n```javascript\nvar input = 'SGVsbG8gV29ybGQh';\nvar encoded = encoder.base64Decode(input); //\"Hello World!\"\n```\n\n## Test\nMake sure `mocha` is installed globally\n```\nnpm install mocha -g\n```\nRun `npm test` to run unit test\n\n## Dependencies\n\n## License\nMIT",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/liushuping/encoder.js",
  "_id": "encoder.js@0.0.2",
  "dist": {
    "shasum": "9f704fd563699bd85bed8e3f30d3ff6e9c01eb05"
  },
  "_from": "encoder.js@",
  "_resolved": "https://registry.npmjs.org/encoder.js/-/encoder.js-0.0.2.tgz"
}
